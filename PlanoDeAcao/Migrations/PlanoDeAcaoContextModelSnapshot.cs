// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanoDeAcao.Data;

namespace PlanoDeAcao.Migrations
{
    [DbContext(typeof(PlanoDeAcaoContext))]
    partial class PlanoDeAcaoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PlanoDeAcao.Models.ActionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("How")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HowMuch")
                        .HasColumnType("float");

                    b.Property<int?>("ParecerId")
                        .HasColumnType("int");

                    b.Property<string>("What")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("When")
                        .HasColumnType("datetime2");

                    b.Property<string>("Where")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Who")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Why")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParecerId");

                    b.ToTable("ActionPlan");
                });

            modelBuilder.Entity("PlanoDeAcao.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("PlanoDeAcao.Models.Parecer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisitaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitaId");

                    b.ToTable("Parecer");
                });

            modelBuilder.Entity("PlanoDeAcao.Models.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataVisita")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Visita");
                });

            modelBuilder.Entity("PlanoDeAcao.Models.ActionPlan", b =>
                {
                    b.HasOne("PlanoDeAcao.Models.Parecer", "Parecer")
                        .WithMany()
                        .HasForeignKey("ParecerId");

                    b.Navigation("Parecer");
                });

            modelBuilder.Entity("PlanoDeAcao.Models.Parecer", b =>
                {
                    b.HasOne("PlanoDeAcao.Models.Visita", "Visita")
                        .WithMany("Parecer")
                        .HasForeignKey("VisitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visita");
                });

            modelBuilder.Entity("PlanoDeAcao.Models.Visita", b =>
                {
                    b.HasOne("PlanoDeAcao.Models.Cliente", "Cliente")
                        .WithMany("Visita")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PlanoDeAcao.Models.Cliente", b =>
                {
                    b.Navigation("Visita");
                });

            modelBuilder.Entity("PlanoDeAcao.Models.Visita", b =>
                {
                    b.Navigation("Parecer");
                });
#pragma warning restore 612, 618
        }
    }
}
